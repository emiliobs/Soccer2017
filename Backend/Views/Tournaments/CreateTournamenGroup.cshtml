@model Domains.TournamentGroup

@{
    ViewBag.Title = "Create Tournamen Group";
}
   

<h2>Create Tournament Group.</h2>   



@using (Html.BeginForm())
{
  
    @Html.AntiForgeryToken()

    <div class="form-horizontal">  
        <p style="color: red"> @Html.LabelFor(model => model.Tournament.Name, new { htmlAttributes = new { @class = "form-control" } }): @ViewData["Tournamet"]</p>
     
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" }) 
        @Html.HiddenFor(model => model.TournamentId)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>  

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-success" />  
                @Html.ActionLink("Back to Tournament", "Details", new { id =Model.TournamentId}, new { @class = "btn btn-default" })
            </div>
        </div>
    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}




